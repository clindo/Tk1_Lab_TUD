Task 1.1: RPC Failure Semantics 
Four types of RPC Failure Semantics are there
a)	At Least Once Semantics: In this the system will retry till the function is invoked successfully. Client send request to the server until the server is acknowledged the request. This should be done only since the operation is idempotent, which means when the multiple invocations are done it should give the same result. The idempotent operations should be stateless, which should not modify the global state in response to the client request.
b)	At Most Once Semantics: This is completely depended on the server status. It executes only once depending on whether the server machine is down. This will recognize the duplicates and also it executes non-idempotent operations.
c)	Exactly Once Semantics: This will tolerate the server crashes by assuming that the crashed server will restart eventually. It will track the calls on the server that is crashed and allow them to adapt to new server.
d)	Maybe Semantics: In this there are no repeated requests. For an operation the caller never receives any fault indication and also they don’t know whether the operations are successfully completed. The Operations in this semantics are implicitly idempotent.
Referred: http://www.cs.unc.edu/~dewan/242/s04/notes/ipc/node30.html
                  http://pubs.opengroup.org/onlinepubs/9629399/chap6.htm
Task 1.2: Marshalling 
a)	Define the Term Marshalling?
Marshalling is the process of transforming memory representation of an object into different formats or packing of procedure parameters into message packets. It is mainly used to make communication between remote objects by converting it into serialized form. 

b)	 In the lecture CORBA CDR has been presented. In CORBA CDR there is no explicit typing. Explain why this is the case and describe advantages as well as disadvantages.  
The use of explicit data typing produces cost in space and time. It need to              interpret the type information and also it need to invoke appropriate actions, so there should be a performance cost. The extra type information is in the marshalled form so there should be space cost also. The RMI protocol for CDR is used when the target and the invoker know what type to expect in the messages carrying its arguments and results. It is possible to build type descriptor on top of CDR.
Referred: http://read.pudn.com/downloads151/ebook/655783/Distributed/Chapter4Answers.pdf







