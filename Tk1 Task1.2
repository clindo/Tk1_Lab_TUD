Task 1.2: Describe the four abstraction levels of distributed systems. 
The four abstraction levels of distributed systems are
1.	Physical Configuration
This is the lowest abstraction level, which is irrelevant for DS. At this level the sysop people need to know about the network and also they need to care about 
1.1.	Ownership
The cost of the entire system and security of the system
1.2.	Bandwidth
The performance provided by the system.
1.3.	Reliability

2.	Logical Configuration
The logical configuration is computer network abstraction. It consists of Autonomous system and communication sub systems, which connect using cloud system or bus. In this sometimes the abstraction is too high and In the case of distributed program abstraction is low.

3.	Process Network (Logical Distribution)
The logical distribution is process exchange messages between nodes. The nodes may be in different location (country or continent). This is completely depends on the underlying support, which means the physical configuration of the system should be reliable. 

4.	Distributed Algorithm
The distributed algorithm is abstracts from several things like 
4.1.	Target Environment
The message passing, Reliability and performance
4.2.	Target Process Configuration
There are many process communicate each other and topology issues.
4.3.	Implementation of Language
The implementation of language, platform and lifecycle




Task 1.3: Transparency (1 P.)
Define the term "transparency". Furthermore, name and describe four real world examples of different types of transparency.

Transparency is concealment from the user and the application programmer of the separation of individual components in a distributed system, so that the systems perceive as a whole, rather than as a collection of independent components.
Four real world examples of different types of transparency are:
1. Location Transparency: The user is unaware about the physical and network location of the resources.Eg: A facebook user is unaware about the location of the resource locations.

2. Access Transparency: Local and remote resources to be accessed using identical operations.Eg: Accessing a file from local file system and cloud file system.

3. Concurrency Transparency: Enables several processes to operate concurrently using shared resources without interference. E.g.: A distributed printing service must provide the same atomic access per file as a central system so that printout is not randomly interleaved.

4.Replication Transparency: enables multiple instances of resources to be use to increase reliability and performance. E.g.: Mirroring of websites and distributed Databases.


Task 1.4: “Programming” Abstractions (4 P.)
Describe the four principles of programming abstractions wrt. Distributed software
development.

The four principles are:

1. Distributed Operating System Approach: The Operating system produces a single system image for all the resources in a distributed system.
